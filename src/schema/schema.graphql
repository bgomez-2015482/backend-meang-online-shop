"Definición de los tipos de raíz"
type Query {
  "Lista de usuarios registrados en la base de datos (Clientes\\Administradores)"
  users: ResultUsers
  "Para iniciar sesión de usuario"
  login(email: String!, password: String!): ResultLogin
  "Atenticarnos mediante token"
  me: ResultUser
}

type Mutation {
  register(user: UserInput!): ResultUser
}

"Interface para especificar las propiedades en las propiedades obligatorias"
interface Result {
  "Estado de la operación"
  status: Boolean!
  "Mensaje de la operación para dar feedback"
  message: String!
}

type ResultUsers implements Result {
  "Estado de la operación"
  status: Boolean!
  "Mensaje de la operación para dar feedback"
  message: String!
  "Lista de usuarios registrados en la base de datos (Clientes\\Administradores)"
  users: [User!]!
}

type ResultUser implements Result {
  "Estado de la operación"
  status: Boolean!
  "Mensaje de la operación para dar feedback"
  message: String!
  "Información del usuario"
  user: User
}

type ResultLogin implements Result {
  "Estado de la operación"
  status: Boolean!
  "Mensaje de la operación para dar feedback"
  message: String!
  "Información del token del usuario logueado"
  token: String
}

"""
Especificar información detallada del usuario
email=usuario
fechaNacimiento y de registro = formato ISO
"""
type User {
  "Identificador único"
  id: ID!
  "Nombre de pila"
  name: String!
  "Apellido/s"
  lastName: String!
  "Correo electrónico"
  email: String!
  "Contraseña asociada a la cuenta"
  password: String!
  "Fecha de registro en la base de datos"
  registerDate: String!
  "Fecha de nacimiento - Solo 18+"
  birthday: String!
  "Permisos del usuario"
  role: Role!
}

"Input para añadir los datos del usuario en el registro"
input UserInput {
  "Identificador en este caso no obligatorio"
  id: ID
  "Nombre de pila"
  name: String!
  "Apellido/s"
  lastName: String!
  "Correo electrónico"
  email: String!
  "Contraseña asociada a la cuenta"
  password: String!
  "Fecha de nacimiento - Solo 18+"
  birthday: String!
  "Permisos del usuario"
  role: Role = CLIENT
}

enum Role {
  CLIENT
  ADMIN
}
